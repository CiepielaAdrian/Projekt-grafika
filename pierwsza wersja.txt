#include <iostream>
#include <fstream>
#include <conio.h>
#include <stdio.h>


using namespace std;

unsigned char* ReadBMP(char* filename)
{
    int i;
    FILE* f = fopen(filename, "rb");
    FILE* w = fopen("zapis.bmp", "w");
    ofstream x;
    x.open("wynik.txt");

    if(f == NULL)
        throw "Argument Exception";

    unsigned char info[54];
    fread(info, sizeof(unsigned char), 54, f); // read the 54-byte header
    // extract image height and width from header
    int width = *(int*)&info[18];
    int height = *(int*)&info[22];

    cout << endl;
    cout << "  Name: " << filename << endl;
    cout << " Width: " << width << endl;
    cout << "Height: " << height << endl;

    int row_padded = (width*3 + 3) & (~3);
    cout << row_padded;
    unsigned char* data = new unsigned char[row_padded];
    unsigned char tmp;

    for(int i = 0; i < height; i++)
    {
        fread(data, sizeof(unsigned char), row_padded, f);
        for(int j = 0; j < width*3; j += 3)
        {
            // Convert (B, G, R) to (R, G, B)
            tmp = data[j];
            data[j] = data[j+2];
            data[j+2] = tmp;

            //x << "R: "<< (int)data[j] << " G: " << (int)data[j+1]<< " B: " << (int)data[j+2]<< endl;
        }
    }

    int kolor;
    /*int temp,temp1,temp2;
 for(int i = 0; i < height; i++)
    {
        for(int j = 0; j < width*3; j += 3)
        {
        /*kolor +=data[j];
        kolor +=data[j+1];
        kolor +=data[j+2];
        kolor = kolor/3;
        temp=data[j]/3;
        temp1=data[j+1]/3;
        temp2=data[j+2]/3;
        kolor=temp+temp1+temp2;
        data[j] = (static_cast<unsigned char>(kolor));
        data[j+1] = (static_cast<unsigned char>(kolor));
        data[j+2] = (static_cast<unsigned char>(kolor));
        x << kolor << " ";
        }
    }*/
  /*  for(int u = 0; u < width*3; u++)
        x << data[u] << " ";

    int kolor;

    for(int i = 0; i < width*3; i+=3)
    {
        //kolor = 0.114*data[i]+0.587*data[i+1]+0.299*data[i+2];
        //kolor = (data[i]+data[i+1]+data[i+2])/3;
        kolor = ((static_cast<int>(data[i]))+(static_cast<int>(data[i+1]))+(static_cast<int>(data[i+2])))/3;
        //cout << kolor << endl;
        data[i] = (static_cast<unsigned char>(kolor));
        data[i+1] = (static_cast<unsigned char>(kolor));
        data[i+2] = (static_cast<unsigned char>(kolor));
        //x << kolor << " ";
    }
*/


    fwrite(info, sizeof(unsigned char), 54, w);

    for(int i = 0; i < height; i++)
    {
        fwrite(data, sizeof(unsigned char), row_padded, w);
        for(int j = 0; j < width*3; j += 3)
        {
            // Convert (B, G, R) to (R, G, B)
            tmp = data[j];
            data[j] = data[j+2];
            data[j+2] = tmp;

            //x << "R: "<< (int)data[j] << " G: " << (int)data[j+1]<< " B: " << (int)data[j+2]<< endl;
        }
    }

    fclose(f);
    fclose(w);
    x.close();
    return data;
}

int main()
{
    ReadBMP("widok.bmp");
    return 0;
}

